body:init {
  create-element: 
    page-container pageContainer,
    page-header pageHeader,
    page-logo pageLogo,
    nav-panel navPanel,
    intro-panel introPanel,
    main-panel mainPanel,
    splitter-panel splitterPanel,
    aside-panel asidePanel,
    page-footer pageFooter;
}
@component pageContainer html("/assets/activecss/components/page-container.html" get nocache) {}
@component pageHeader html("/assets/activecss/components/page-header.html" get nocache) {}
@component pageLogo html("/assets/activecss/components/page-logo.html" get nocache) {}
@component navPanel html("/assets/activecss/components/nav-panel.html" get nocache) {}
@component introPanel html("/assets/activecss/components/intro-panel.html" get nocache) {}
@component mainPanel html("/assets/activecss/components/main-panel.html" get nocache) {
  &:componentOpen {
    #myList {
      ajax: "https://my-json-server.typicode.com/dragontheory/D7460N-data/names/" get json await;
      console-log: "getting here";
      trigger: setup;
      var: startingLiCo {liCo};
      @each item in {JSON} {
        var: liCo++;
        render-before-end:
        "<li data-co=\"{liCo}\" data-id=\"{item.id}\">
          <table-cell>
            <input type="checkbox" id="" name="table-row" value="" />
          </table-cell>
          <table-cell>{item.id}</table-cell>
          <table-cell>{item.name}</table-cell>
          <table-cell>{item.username}</table-cell>
          <table-cell><a href=\"https://{item.website}\" target=\"_new\">{item.website}</a></table-cell>
          <table-cell><a href=\"mailto:{item.email}\" target=\"_new\">{item.email}</a></table-cell>
        </li>";
      }
      trigger: countRows;
    }
  }
}
@component splitterPanel html("/assets/activecss/components/splitter-panel.html" get nocache) {
  &:componentOpen {
    run: {=
      Split({
        columnGutters: [{
          track: 3,
            element: document.querySelector('splitter-panel'),
          }]
       });
    =};
  }
}
@component asidePanel html("/assets/activecss/components/aside-panel.html" get) {
  /* Add .aside to <body> the moment <table-details> ol is NOT empty. */
  table-details ol:not-if-empty:observe {
    body {
      add-class: .aside; 
    }
  }
  /* Remove .aside from <body> the moment <table-details> ol IS empty. */
  #myList:if-empty:observe, table-details ol:if-empty:observe {
    body {
      remove-class: .aside;
    }
    page-container {
      remove-attribute: style;
    }
  }
}
@component pageFooter html("/assets/activecss/components/page-footer.html" get) {}
