
body:init {
  console-log: "Initializing ACSS";
  var: co 0;
  #myList {
    trigger: setup;
  }
	ajax: "https://jsonplaceholder.typicode.com/users" get json await;
  #myList {
    var: startingLiCo {liCo};
    @each item in {JSON} {
      var: liCo++;
      render-before-end:
      "<li data-co=\"{liCo}\">
        <table-cell-divider> | </table-cell-divider>
        <table-cell>ID {item.id}</table-cell>
        <table-cell-divider> | </table-cell-divider>
        <table-cell>{item.name}</table-cell>
        <table-cell-divider> | </table-cell-divider>
        <table-cell>{item.username}</table-cell>
        <table-cell-divider> | </table-cell-divider>
        <table-cell><a href=\"https://{item.website}\" target=\"_new\">{item.website}</a></table-cell>
        <table-cell-divider> | </table-cell-divider>
        <table-cell><a href=\"mailto:{item.email}\" target=\"_new\">{item.email}</a></table-cell>
      </li>";
    }
  }
  #myList {
	 trigger: countRows;
	}
}
window:resize {
  #myList {
    trigger: setup;
  }
}

#myList:setup {
  var: totalVisible 0,
       totalNonVisible 0,
       liCo 0,
       startingLiCo 0;
  #myList li {
    var: liCo++;
  }
  #myList {
    trigger: countRows;
  }
}

#myList:countRows {
  @for n from {startingLiCo} + 1 to {liCo} {
    @if completely-visible(li[data-co="{n}"] scope(#myList)) {
      var: totalVisible++;
        } @else {
      var: totalNonVisible++;
    }
  }
  #visibleCount {
    /* add 0 if less than 10 */
    @if {totalVisible} < 10 {
      render: 0{totalVisible};
    } @else {
      render: {totalVisible};
    }
  }
  #nonVisibleCount {
    /* add 0 if less than 10 */
    @if {totalNonVisible} < 10 {
      render: 0{totalNonVisible};
    } @else {
      render: {totalNonVisible};
    }
  }
}

#myList {
  var: startingLiCo {liCo};
  @each item in {JSON} {
    var: liCo++;
    render-before-end:
      "<li data-co=\"{liCo}\">
        <table-cell-divider> | </table-cell-divider>
        <table-cell>ID {item.id}</table-cell>
        <table-cell-divider> | </table-cell-divider>
        <table-cell>{item.name}</table-cell>
        <table-cell-divider> | </table-cell-divider>
        <table-cell>{item.username}</table-cell>
        <table-cell-divider> | </table-cell-divider>
        <table-cell><a href=\"https://{item.website}\" target=\"_new\">{item.website}</a></table-cell>
        <table-cell-divider> | </table-cell-divider>
        <table-cell><a href=\"mailto:{item.email}\" target=\"_new\">{item.email}</a></table-cell>
      </li>";
    }
  }
  #myList {
    trigger: countRows;
  }
}
 
table-results ol li:click {
  func: myExternalFunction after 100ms;
  table-results ol li {
    remove-class: .active-li;
  }
  add-class: .active-li;
  table-details ol {
    render: "<li><table-cell>key</table-cell><table-cell>value</table-cell></li>";
  }
}
table-details ol:if-empty:observe {
  body {
    remove-class: .profile;
  }
}
table-details ol:not-if-empty:observe {
  body {
    add-class: .profile; 
  }
}
table-results li:observe {
  var: co++;
  set-property: customIndex "{co}";
  set-attribute: data-count "{@@customIndex}";
}
